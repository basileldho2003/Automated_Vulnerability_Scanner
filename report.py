from sqlalchemy import TEXT, TIMESTAMP, Column, Integer, String
from database import Base, SessionLocal
from datetime import datetime

class ScanResult(Base):
    __tablename__ = 'scan_results'
    id = Column(Integer, primary_key=True, index=True)
    target_id = Column(Integer)
    vulnerability_type = Column(String(255))
    description = Column(TEXT)
    remediation = Column(TEXT)
    found_at = Column(TIMESTAMP, default=datetime.utcnow)

def save_scan_result(target_id, vulnerability_type, description, remediation):
    session = SessionLocal()
    result = ScanResult(
        target_id=target_id,
        vulnerability_type=vulnerability_type,
        description=description,
        remediation=remediation
    )
    session.add(result)
    session.commit()
    session.close()
def get_remediation_suggestions(vulnerability_type):
    suggestions = {
        "SQL Injection": "Use prepared statements and parameterized queries.",
        "XSS": "Use proper input validation and encoding."
    }
    return suggestions.get(vulnerability_type, "No suggestions available.")
